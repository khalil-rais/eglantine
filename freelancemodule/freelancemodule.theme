<?php
use Drupal\Component\Utility\NestedArray;

/**
 * Implements template_preprocess_image().
 */
function freelancemodule_preprocess_image(&$vars) {

  if ($vars['style_name'] == 'commerce_original') {
    // Remove explicit width & height declaration.
    unset($vars['width'], $vars['height'], $vars['attributes']['width'], $vars['attributes']['height']);
  }
}

function freelancemodule_preprocess_commerce_product__type_parfum(&$variables, $hook){
	$variation_field_substance=$variables['product']['variation_field_substance']['#items'];
	
	if (isset($variation_field_substance)){
		$variables["variation_field_substance"]=true;
	}
	else{
		$variables["variation_field_substance"]=false;
	}	

}


function freelancemodule_preprocess_field(&$variables, $hook){
					

}
function freelancemodule_preprocess_block__headercontact(&$variables) {
	$variables['lang'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
}
function freelancemodule_preprocess_block__mainpagecontent(&$variables) {
	
    $current_path = \Drupal::service('path.current')->getPath();
	$pattern = "/search\/node/";
	if (preg_match($pattern, $current_path) ){
		$variables['attributes']['class'][] = 'my-search-block';
		\Drupal::logger('parfum')->notice('An order is created3:'.$variables['plugin_id']);
	}
}


/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function freelancemodule_preprocess_node(array &$variables) {


	if (isset($variables['node'])){
		if ($variables['node']->getType() == 'front_page'){
			$viewResults = views_get_view_result('new_arrived_product', 'block_1');
			foreach($viewResults as $viewRow) {
				$entity = $viewRow->_entity;
				$target_id = $entity->get('field_photo_detail')->getValue()[0]['target_id'];
				$file = \Drupal\file\Entity\File::load($target_id);
				$file_uri = $file->getFileUri();
				$var['photo_url'] = file_create_url($file_uri);
				$var['title'] = $entity->get('title')->getValue()[0]['value'];
				$var['price'] = $entity->get('price')->getValue()[0]['number'];
				$variables['products'][] = $var;
			}
			

			////////////////////////////////////////////////
			$block_manager = \Drupal::service('plugin.manager.block');
			$config = [];
			
			$plugin_block = $block_manager->createInstance('views_block:popular_product-block_1', $config);			
			
			$access_result = $plugin_block->access(\Drupal::currentUser());
			if (is_object($access_result) && $access_result->isForbidden() || is_bool($access_result) && !$access_result) {
				return [];
			}
			$render = $plugin_block->build();	
			$variables['my_popular_product_output'] = $render;

			/*ob_start();
			var_dump($variables['my_selecteurdelangue']);
			
			$dumpy = ob_get_clean();			
			\Drupal::logger('parfum')->notice('freelancemodule_preprocess_node:'.$dumpy);*/
		
		}
	
		
		$variables['lang'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
	}
}

function freelancemodule_form_contact_message_feedback_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){

	// Name
  $form['name']['#prefix'] = '<div class="col-md-6 col-md-6">';
  $form['name']['#suffix'] = '</div>';
  $form['name']['#attributes']['placeholder'][] = $form['name']['#title'].'*';
  $form['name']['#attributes']['class'][] = 'form-control';
  unset($form['name']['#title']);

  // Mail
  $form['mail']['#prefix'] = '<div class="col-md-6 col-md-6">';
  $form['mail']['#suffix'] = '</div>';
  $form['mail']['#attributes']['placeholder'][] = $form['mail']['#title'].'*';
  $form['mail']['#attributes']['class'][] = 'form-control';
  unset($form['mail']['#title']);

  // Subject
  $form['field_select_subject_contact']['#prefix'] = '<div class="col-md-12 col-sm-12">';
  $form['field_select_subject_contact']['#suffix'] = '</div>';
  $form['field_select_subject_contact']['widget']['value']['#attributes']['class'][] = 'form-control';
  $form['field_select_subject_contact']['widget']['value']['#attributes']['placeholder'][] = $form['field_select_subject_contact']['widget']['#title'].'*';
  $form['field_select_subject_contact']['widget']['#title'] = '';
  unset($form['field_select_subject_contact']['widget']['value']['#title']);

	// Phone number
  $form['field_phone_number_contact']['#prefix'] = '<div class="col-md-6 col-md-6">';
  $form['field_phone_number_contact']['#suffix'] = '</div>';
  $form['field_phone_number_contact']['widget'][0]['value']['#attributes']['placeholder'][] = $form['field_phone_number_contact']['widget'][0]['#title'];
  $form['field_phone_number_contact']['widget']['value']['#attributes']['class'][] = 'form-control';
  unset($form['field_phone_number_contact']['widget'][0]['value']['#title']);

  //Command number

  $form['field_command_number_contact']['widget'][0]['value']['#attributes']['placeholder'][] = $form['field_command_number_contact']['widget'][0]['#title'];
  $form['field_command_number_contact']['widget']['value']['#attributes']['class'][] = 'form-control';
  unset($form['field_command_number_contact']['widget'][0]['value']['#title']);
  $form['field_command_number_contact']['#prefix'] = '<div class="col-md-6 col-md-6">';
  $form['field_command_number_contact']['#suffix'] = '</div>';

  // Message
  $form['message']['widget']['value']['#attributes']['class'][] = 'form-control';
  $form['message']['widget'][0]['value']['#attributes']['placeholder'][] = $form['message']['widget'][0]['#title'].'*';
  $form['message']['widget'][0]['#title'] = '';
  unset($form['message']['widget'][0]['value']['#title']);
  $form['message']['widget']['#prefix'] = '<div class="col-md-12">';
  $form['message']['widget']['#suffix'] = '</div>';

    // Submit
  $form['actions']['#prefix'] = '<div class="col-md-12">';
  $form['actions']['#suffix'] = '</div>';
  $form['actions']['preview']['#access'] = FALSE;
}

function freelancemodule_layout_footer_block(&$variables) {
	\Drupal::logger('parfum')->notice('freelancemodule_layout_footer_block:');	
	
}

function theme_layout_footer_block(&$variables) {
	\Drupal::logger('parfum')->notice('theme_layout_footer_block:');	
	
}
function freelancemodule_preprocess_html(&$variables) {
	$current_path = \Drupal::service('path.current')->getPath();
	$session = \Drupal::request()->getSession();
	$variables['lang'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
 
	if ((\Drupal::service('path.matcher')->isFrontPage()or $current_path =="/node/2465")  and \Drupal::currentUser()->isAnonymous()){
		\Drupal::service('page_cache_kill_switch')->trigger();
		if (!isset($_SESSION['afficher_cookies_message_en']) and empty($session->get('afficher_cookies_message_en')) and $variables['lang'] =="en"){
			$variables['afficher_cookies_message'] = TRUE;
			$session->set('afficher_cookies_message_en', TRUE);
			setcookie("afficher_cookies_message_en", TRUE);
		}
		elseif(!isset($_SESSION['afficher_cookies_message_fr']) and empty($session->get('afficher_cookies_message_fr')) and $variables['lang'] =="fr"){			
			$variables['afficher_cookies_message'] = TRUE;
			$session->set('afficher_cookies_message_fr', TRUE);
			setcookie("afficher_cookies_message_fr", TRUE);
		}
		else{
			$variables['afficher_cookies_message'] = FALSE;
		}					
	}
	else{
		$variables['afficher_cookies_message'] = FALSE;
	}
	
	
	
}

function freelancemodule_preprocess_breadcrumb(&$variables){

}

function freelancemodule_get_current_menu_tree($tree){

 foreach ($tree as $data) {
  if ($data->inActiveTrail){
    $link = $data->link;
    $url = $link->getUrlObject();
    $url->setOption('set_active_class', TRUE);
    if (isset($data->options)) {
        $url->setOptions(NestedArray::mergeDeep($url->getOptions(), $data->options));
    }    
    return array( 'title' => $link->getTitle(),
                  'link' => $url,
                  'data_subtree' => $data->subtree
                );
  }
 }  
}

function freelancemodule_preprocess_commerce_product(&$variables){
  $current_path = \Drupal::service('path.current')->getPath();
  $base_url = \Drupal::request()->getBaseUrl();
  $variables['edit_product'] = $base_url.$current_path.'/edit';
  $variables['lang'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
}  

function freelancemodule_preprocess_views_view_table(&$variables){
  if (isset($variables['caption']['#markup'])){
    if ($variables['caption']['#markup'] == 'final_cart'){
      $variables['final_cart'] = TRUE;
    }
    else if ($variables['caption']['#markup'] == 'order_information'){
      $variables['order_information'] = TRUE;
    }
  } 
}

function freelancemodule_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'user_login_form') {
    $form['#attributes']['class'][] = 'container';
  }  
  elseif ( preg_match ( '/commerce_order_item_add_to_cart_form_commerce_product/' , $form_id)){
	  if (isset($form['purchased_entity']["widget"][0]["attributes"]["attribute_poids_produit"])){
		  $form['name']['#suffix'] = '<span class="facility">&plusmn;5gr</span>';
	  }

}

function freelancemodule_theme_suggestions_input_alter(&$suggestions, array $variables) {
  $element = $variables['element'];
  if ($element['#type'] == 'submit' && preg_match ( '/edit-submit/' , $element['#id'])) {	  
		
	$current_path = \Drupal::service('path.current')->getPath();
	if ( (preg_match ( '/^\/product/' , $current_path) or preg_match ( '/^\/fr\/product/' , $current_path) or preg_match ( '/^\/en\/product/' , $current_path)) && $element["#value"]->__toString()== t("Add to cart")){		
		$suggestions[] = 'input__product__subject';
	}		
  }
}

function freelancemodule_preprocess_node__article(array &$variables) {

	$block_manager = \Drupal::service('plugin.manager.block');
	$config = [];
	
	//Second bottom block, deactivated to the customer
	if (0){
		$plugin_block = $block_manager->createInstance('views_block:same_article-block_1', $config);
		$access_result = $plugin_block->access(\Drupal::currentUser());
		if (is_object($access_result) && $access_result->isForbidden() || is_bool($access_result) && !$access_result) {
			return [];
		}
		$render = $plugin_block->build();	
		$variables['my_node_article_output'] = $render;			
	}
	
	//Third bottom block	
	$plugin_block = $block_manager->createInstance('views_block:popular_product-block_2', $config);
	$access_result = $plugin_block->access(\Drupal::currentUser());
	if (is_object($access_result) && $access_result->isForbidden() || is_bool($access_result) && !$access_result) {
		return [];
	}
	$render = $plugin_block->build();	
	$variables['my_node_popular_product'] = $render;


	//Search block	
	$plugin_block = $block_manager->createInstance('search_form_block', $config);
	$access_result = $plugin_block->access(\Drupal::currentUser());
	if (is_object($access_result) && $access_result->isForbidden() || is_bool($access_result) && !$access_result) {
		return [];
	}
	$render = $plugin_block->build();	
	$variables['my_node_search'] = $render;

	
}
 
function freelancemodule_preprocess_form_element_label(&$variables){
	$current_path = \Drupal::service('path.current')->getPath();
	$pattern = "/order_information/";
	if (preg_match($pattern, $current_path)  and preg_match("/shipping\-method/", $variables["element"]["#id"])){
		$keywords = preg_split("/:/", $variables["element"]["#title"]->__toString());
		if (count ($keywords)==2){
			$variables["element"]["#title"] = Drupal\Core\Render\Markup::create(t($keywords[0]).':'.$keywords[1]);
			$variables["title"]["#markup"] = Drupal\Core\Render\Markup::create(t($keywords[0]).':'.$keywords[1]);
		}

	}
}
function freelancemodule_form_search_block_form_alter(&$form, &$form_state) {
	$form['keys']['#attributes']['placeholder'][] = t('Search');
	$form['actions']['submit']['#value'] = html_entity_decode('&#xf002;');
}

function freelancemodule_form_search_form_alter(&$form, &$form_state) {
	//$form['keys']['#attributes']['placeholder'][] = t('Search');
	$form['basic']['submit']['#value'] = html_entity_decode('&#xf002;');
	//$form['actions']['submit']['#value'] = "test";	  
}
  


function freelancemodule_preprocess_container(array &$variables) {
	//Current Path
	$variables['current_path'] = \Drupal::service('path.current')->getPath();;
	$variables['current_uri'] = \Drupal::request()->getRequestUri();	
	
}